// GENERATED CODE - DO NOT MODIFY BY HAND
// ignore_for_file: prefer_single_quotes, public_member_api_docs, lines_longer_than_80_chars, implicit_dynamic_list_literal, implicit_dynamic_map_literal

import 'package:mason/mason.dart';

final atOnboardingFlutterBundle = MasonBundle.fromJson(<String, dynamic>{"files":[{"path":"lib\\contact_initial.dart","data":"aW1wb3J0ICdwYWNrYWdlOmZsdXR0ZXIvbWF0ZXJpYWwuZGFydCc7CgpjbGFzcyBDb250YWN0SW5pdGlhbCBleHRlbmRzIFN0YXRlbGVzc1dpZGdldCB7CiAgZmluYWwgZG91YmxlIHNpemU7CiAgZmluYWwgU3RyaW5nIGluaXRpYWxzOwogIGZpbmFsIGludCBpbmRleDsKCiAgY29uc3QgQ29udGFjdEluaXRpYWwoe0tleSBrZXkgPSBjb25zdCBLZXkoJ2NvbnRhY3RfaW5pdGlhbCcpLCB0aGlzLnNpemUgPSA0MCwgdGhpcy5pbml0aWFscyA9ICdBVCcsIGluZGV4ID0gMn0pCiAgICAgIDogaW5kZXggPSAoaW5pdGlhbHMubGVuZ3RoIDwgMykgPyBpbml0aWFscy5sZW5ndGggOiAzLAogICAgICAgIHN1cGVyKGtleToga2V5KTsKICBAb3ZlcnJpZGUKICBXaWRnZXQgYnVpbGQoQnVpbGRDb250ZXh0IGNvbnRleHQpIHsKCiAgICByZXR1cm4gQ29udGFpbmVyKAogICAgICBoZWlnaHQ6IHNpemUsCiAgICAgIHdpZHRoOiBzaXplLAogICAgICBkZWNvcmF0aW9uOiBCb3hEZWNvcmF0aW9uKAogICAgICAgIGNvbG9yOiBDb250YWN0SW5pdGlhbHNDb2xvcnMuZ2V0Q29sb3IoaW5pdGlhbHMpLAogICAgICAgIGJvcmRlclJhZGl1czogQm9yZGVyUmFkaXVzLmNpcmN1bGFyKHNpemUpLAogICAgICApLAogICAgICBjaGlsZDogQ2VudGVyKAogICAgICAgIGNoaWxkOiBUZXh0KGluaXRpYWxzLnN1YnN0cmluZygoaW5kZXggPT0gMSkgPyAwIDogMSwgaW5kZXgpLnRvVXBwZXJDYXNlKCksCiAgICAgICAgICAgIHN0eWxlOiBjb25zdCBUZXh0U3R5bGUoCiAgICAgICAgICAgICAgY29sb3I6IENvbG9ycy53aGl0ZSwKICAgICAgICAgICAgICBmb250U2l6ZTogMTIuMCwKICAgICAgICAgICAgICBsZXR0ZXJTcGFjaW5nOiAwLjEsCiAgICAgICAgICAgICAgZm9udFdlaWdodDogRm9udFdlaWdodC53NzAwLAogICAgICAgICAgICApKSwKICAgICAgKSwKICAgICk7CiAgfQp9CgpjbGFzcyBDb250YWN0SW5pdGlhbHNDb2xvcnMgewogIHN0YXRpYyBDb2xvciBnZXRDb2xvcihTdHJpbmcgYXRzaWduKSB7CiAgICBpZiAoYXRzaWduLmxlbmd0aCA9PSAxKSB7CiAgICAgIGF0c2lnbiA9IGF0c2lnbiArICcgJzsKICAgIH0KICAgIHN3aXRjaCAoYXRzaWduWzFdLnRvVXBwZXJDYXNlKCkpIHsKICAgICAgY2FzZSAnQSc6CiAgICAgICAgcmV0dXJuIGNvbnN0IENvbG9yKDB4RkZBQTBERkUpOwogICAgICBjYXNlICdCJzoKICAgICAgICByZXR1cm4gY29uc3QgQ29sb3IoMHhGRjMyODNGRSk7CiAgICAgIGNhc2UgJ0MnOgogICAgICAgIHJldHVybiBjb25zdCBDb2xvcigweEZGODU2NjBEKTsKICAgICAgY2FzZSAnRCc6CiAgICAgICAgcmV0dXJuIGNvbnN0IENvbG9yKDB4RkY3ODJBQjYpOwogICAgICBjYXNlICdFJzoKICAgICAgICByZXR1cm4gY29uc3QgQ29sb3IoMHhGRjU2NTY1Nik7CiAgICAgIGNhc2UgJ0YnOgogICAgICAgIHJldHVybiBjb25zdCBDb2xvcigweEZGMUM4MzU2KTsKICAgICAgY2FzZSAnRyc6CiAgICAgICAgcmV0dXJuIGNvbnN0IENvbG9yKDB4RkYxNkZGMzIpOwogICAgICBjYXNlICdIJzoKICAgICAgICByZXR1cm4gY29uc3QgQ29sb3IoMHhGRkY3RTFBMCk7CiAgICAgIGNhc2UgJ0knOgogICAgICAgIHJldHVybiBjb25zdCBDb2xvcigweEZGRTJFMkUyKTsKICAgICAgY2FzZSAnSic6CiAgICAgICAgcmV0dXJuIGNvbnN0IENvbG9yKDB4RkYxQ0JFNEYpOwogICAgICBjYXNlICdLJzoKICAgICAgICByZXR1cm4gY29uc3QgQ29sb3IoMHhGRkM0NDUxQyk7CiAgICAgIGNhc2UgJ0wnOgogICAgICAgIHJldHVybiBjb25zdCBDb2xvcigweEZGREVBMEZEKTsKICAgICAgY2FzZSAnTSc6CiAgICAgICAgcmV0dXJuIGNvbnN0IENvbG9yKDB4RkZGRTAwRkEpOwogICAgICBjYXNlICdOJzoKICAgICAgICByZXR1cm4gY29uc3QgQ29sb3IoMHhGRjMyNUE5Qik7CiAgICAgIGNhc2UgJ08nOgogICAgICAgIHJldHVybiBjb25zdCBDb2xvcigweEZGRkVBRjE2KTsKICAgICAgY2FzZSAnUCc6CiAgICAgICAgcmV0dXJuIGNvbnN0IENvbG9yKDB4RkZGOEExOUYpOwogICAgICBjYXNlICdRJzoKICAgICAgICByZXR1cm4gY29uc3QgQ29sb3IoMHhGRjkwQUQxQyk7CiAgICAgIGNhc2UgJ1InOgogICAgICAgIHJldHVybiBjb25zdCBDb2xvcigweEZGRjYyMjJFKTsKICAgICAgY2FzZSAnUyc6CiAgICAgICAgcmV0dXJuIGNvbnN0IENvbG9yKDB4RkYxQ0ZGQ0UpOwogICAgICBjYXNlICdUJzoKICAgICAgICByZXR1cm4gY29uc3QgQ29sb3IoMHhGRjJFRDlGRik7CiAgICAgIGNhc2UgJ1UnOgogICAgICAgIHJldHVybiBjb25zdCBDb2xvcigweEZGQjEwREExKTsKICAgICAgY2FzZSAnVic6CiAgICAgICAgcmV0dXJuIGNvbnN0IENvbG9yKDB4RkZDMDc1QTYpOwogICAgICBjYXNlICdXJzoKICAgICAgICByZXR1cm4gY29uc3QgQ29sb3IoMHhGRkZDMUNCRik7CiAgICAgIGNhc2UgJ1gnOgogICAgICAgIHJldHVybiBjb25zdCBDb2xvcigweEZGQjAwMDY4KTsKICAgICAgY2FzZSAnWSc6CiAgICAgICAgcmV0dXJuIGNvbnN0IENvbG9yKDB4RkZGQkU0MjYpOwogICAgICBjYXNlICdaJzoKICAgICAgICByZXR1cm4gY29uc3QgQ29sb3IoMHhGRkZBMDA4Nyk7CiAgICAgIGNhc2UgJ0AnOgogICAgICAgIHJldHVybiBjb25zdCBDb2xvcigweEZGQUEwREZFKTsKCiAgICAgIGRlZmF1bHQ6CiAgICAgICAgcmV0dXJuIGNvbnN0IENvbG9yKDB4RkZBQTBERkUpOwogICAgfQogIH0KfQo=","type":"text"},{"path":"lib\\main.dart","data":"aW1wb3J0ICdkYXJ0OmFzeW5jJzsNCg0KaW1wb3J0ICdwYWNrYWdlOmF0X2NsaWVudF9tb2JpbGUvYXRfY2xpZW50X21vYmlsZS5kYXJ0JzsNCmltcG9ydCAncGFja2FnZTphdF9vbmJvYXJkaW5nX2ZsdXR0ZXIvYXRfb25ib2FyZGluZ19mbHV0dGVyLmRhcnQnIHNob3cgT25ib2FyZGluZzsNCmltcG9ydCAncGFja2FnZTphdF9vbmJvYXJkaW5nX2ZsdXR0ZXIvd2lkZ2V0cy9jdXN0b21fcmVzZXRfYnV0dG9uLmRhcnQnOw0KaW1wb3J0ICdwYWNrYWdlOmF0X3V0aWxzL2F0X2xvZ2dlci5kYXJ0JyBzaG93IEF0U2lnbkxvZ2dlcjsNCmltcG9ydCAncGFja2FnZTpmbHV0dGVyL21hdGVyaWFsLmRhcnQnOw0KaW1wb3J0ICdwYWNrYWdlOnBhdGhfcHJvdmlkZXIvcGF0aF9wcm92aWRlci5kYXJ0JyBzaG93IGdldEFwcGxpY2F0aW9uU3VwcG9ydERpcmVjdG9yeTsNCg0KaW1wb3J0ICdwYWNrYWdlOmF0X2FwcF9mbHV0dGVyL2F0X2FwcF9mbHV0dGVyLmRhcnQnIHNob3cgQXRFbnY7DQoNCmltcG9ydCAnc3dpdGNoX2F0c2lnbi5kYXJ0JzsNCmltcG9ydCAndGhlbWUuZGFydCc7DQoNCkZ1dHVyZTx2b2lkPiBtYWluKCkgYXN5bmMgew0KICBhd2FpdCBBdEVudi5sb2FkKCk7DQogIHJ1bkFwcChjb25zdCBNeUFwcCgpKTsNCn0NCg0KRnV0dXJlPEF0Q2xpZW50UHJlZmVyZW5jZT4gbG9hZEF0Q2xpZW50UHJlZmVyZW5jZSgpIGFzeW5jIHsNCiAgdmFyIGRpciA9IGF3YWl0IGdldEFwcGxpY2F0aW9uU3VwcG9ydERpcmVjdG9yeSgpOw0KICByZXR1cm4gQXRDbGllbnRQcmVmZXJlbmNlKCkNCiAgICAgICAgLi5yb290RG9tYWluID0gQXRFbnYucm9vdERvbWFpbg0KICAgICAgICAuLm5hbWVzcGFjZSA9IEF0RW52LmFwcE5hbWVzcGFjZQ0KICAgICAgICAuLmhpdmVTdG9yYWdlUGF0aCA9IGRpci5wYXRoDQogICAgICAgIC4uY29tbWl0TG9nUGF0aCA9IGRpci5wYXRoDQogICAgICAgIC4uaXNMb2NhbFN0b3JlUmVxdWlyZWQgPSB0cnVlDQogICAgICAvLyBUT0RPIHNldCB0aGUgcmVzdCBvZiB5b3VyIEF0Q2xpZW50UHJlZmVyZW5jZSBoZXJlDQogICAgICA7DQp9DQoNCmZpbmFsIFN0cmVhbUNvbnRyb2xsZXI8VGhlbWVNb2RlPiB1cGRhdGVUaGVtZU1vZGUgPSBTdHJlYW1Db250cm9sbGVyPFRoZW1lTW9kZT4uYnJvYWRjYXN0KCk7DQoNCmNsYXNzIE15QXBwIGV4dGVuZHMgU3RhdGVmdWxXaWRnZXQgew0KICBjb25zdCBNeUFwcCh7S2V5PyBrZXl9KSA6IHN1cGVyKGtleToga2V5KTsNCiAgQG92ZXJyaWRlDQogIF9NeUFwcFN0YXRlIGNyZWF0ZVN0YXRlKCkgPT4gX015QXBwU3RhdGUoKTsNCn0NCg0KY2xhc3MgX015QXBwU3RhdGUgZXh0ZW5kcyBTdGF0ZTxNeUFwcD4gew0KICAvLyAqIGxvYWQgdGhlIEF0Q2xpZW50UHJlZmVyZW5jZSBpbiB0aGUgYmFja2dyb3VuZA0KICBGdXR1cmU8QXRDbGllbnRQcmVmZXJlbmNlPiBmdXR1cmVQcmVmZXJlbmNlID0gbG9hZEF0Q2xpZW50UHJlZmVyZW5jZSgpOw0KICBBdENsaWVudFByZWZlcmVuY2U/IGF0Q2xpZW50UHJlZmVyZW5jZTsNCg0KICBmaW5hbCBBdFNpZ25Mb2dnZXIgX2xvZ2dlciA9IEF0U2lnbkxvZ2dlcihBdEVudi5hcHBOYW1lc3BhY2UpOw0KDQogIEBvdmVycmlkZQ0KICBXaWRnZXQgYnVpbGQoQnVpbGRDb250ZXh0IGNvbnRleHQpIHsNCiAgICByZXR1cm4gU3RyZWFtQnVpbGRlcjxUaGVtZU1vZGU+KA0KICAgICAgc3RyZWFtOiB1cGRhdGVUaGVtZU1vZGUuc3RyZWFtLA0KICAgICAgaW5pdGlhbERhdGE6IFRoZW1lTW9kZS5saWdodCwNCiAgICAgIGJ1aWxkZXI6IChCdWlsZENvbnRleHQgY29udGV4dCwgQXN5bmNTbmFwc2hvdDxUaGVtZU1vZGU+IHNuYXBzaG90KSB7DQogICAgICAgIFRoZW1lTW9kZSB0aGVtZU1vZGUgPSBzbmFwc2hvdC5kYXRhID8/IFRoZW1lTW9kZS5saWdodDsNCiAgICAgICAgcmV0dXJuIE1hdGVyaWFsQXBwKA0KICAgICAgICAgIC8vICogVGhlIG9uYm9hcmRpbmcgc2NyZWVuIChmaXJzdCBzY3JlZW4pDQogICAgICAgICAgdGhlbWU6IGxpZ2h0VGhlbWUuY29weVdpdGgoDQogICAgICAgICAgICBjb2xvclNjaGVtZTogbGlnaHRUaGVtZS5jb2xvclNjaGVtZS5jb3B5V2l0aChzZWNvbmRhcnk6IENvbG9ycy5ibGFjaykNCiAgICAgICAgICApLA0KICAgICAgICAgIGRhcmtUaGVtZTogZGFya1RoZW1lLmNvcHlXaXRoKA0KICAgICAgICAgICAgY29sb3JTY2hlbWU6IGRhcmtUaGVtZS5jb2xvclNjaGVtZS5jb3B5V2l0aChzZWNvbmRhcnk6IENvbG9ycy53aGl0ZSksDQogICAgICAgICAgKSwNCiAgICAgICAgICB0aGVtZU1vZGU6IHRoZW1lTW9kZSwNCiAgICAgICAgICBob21lOiBTY2FmZm9sZCgNCiAgICAgICAgICAgIGFwcEJhcjogQXBwQmFyKA0KICAgICAgICAgICAgICB0aXRsZTogY29uc3QgVGV4dCgnTXlBcHAnKSwNCiAgICAgICAgICAgICAgYWN0aW9uczogPFdpZGdldD5bDQogICAgICAgICAgICAgICAgSWNvbkJ1dHRvbigNCiAgICAgICAgICAgICAgICAgIG9uUHJlc3NlZDogKCkgew0KICAgICAgICAgICAgICAgICAgICB1cGRhdGVUaGVtZU1vZGUuc2luay5hZGQodGhlbWVNb2RlID09IFRoZW1lTW9kZS5saWdodCA/IFRoZW1lTW9kZS5kYXJrIDogVGhlbWVNb2RlLmxpZ2h0KTsNCiAgICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgICBpY29uOiBJY29uKA0KICAgICAgICAgICAgICAgICAgICBUaGVtZS5vZihjb250ZXh0KS5icmlnaHRuZXNzID09IEJyaWdodG5lc3MubGlnaHQNCiAgICAgICAgICAgICAgICAgICAgICAgID8gSWNvbnMuZGFya19tb2RlX291dGxpbmVkDQogICAgICAgICAgICAgICAgICAgICAgICA6IEljb25zLmxpZ2h0X21vZGVfb3V0bGluZWQsDQogICAgICAgICAgICAgICAgICApLA0KICAgICAgICAgICAgICAgICkNCiAgICAgICAgICAgICAgXSwNCiAgICAgICAgICAgICksDQogICAgICAgICAgICBib2R5OiBCdWlsZGVyKA0KICAgICAgICAgICAgICBidWlsZGVyOiAoY29udGV4dCkgPT4gQ2VudGVyKA0KICAgICAgICAgICAgICAgIGNoaWxkOiBDb2x1bW4oDQogICAgICAgICAgICAgICAgICBjaGlsZHJlbjogWw0KICAgICAgICAgICAgICAgICAgICBFbGV2YXRlZEJ1dHRvbigNCiAgICAgICAgICAgICAgICAgICAgICBvblByZXNzZWQ6ICgpIGFzeW5jIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBwcmVmZXJlbmNlID0gYXdhaXQgZnV0dXJlUHJlZmVyZW5jZTsNCiAgICAgICAgICAgICAgICAgICAgICAgIHNldFN0YXRlKCgpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgYXRDbGllbnRQcmVmZXJlbmNlID0gcHJlZmVyZW5jZTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgT25ib2FyZGluZygNCiAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGV4dDogY29udGV4dCwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgYXRDbGllbnRQcmVmZXJlbmNlOiBhdENsaWVudFByZWZlcmVuY2UhLA0KICAgICAgICAgICAgICAgICAgICAgICAgICBkb21haW46IEF0RW52LnJvb3REb21haW4sDQogICAgICAgICAgICAgICAgICAgICAgICAgIHJvb3RFbnZpcm9ubWVudDogQXRFbnYucm9vdEVudmlyb25tZW50LA0KICAgICAgICAgICAgICAgICAgICAgICAgICBhcHBBUElLZXk6IEF0RW52LmFwcEFwaUtleSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgb25ib2FyZDogKHZhbHVlLCBhdHNpZ24pIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfbG9nZ2VyLmZpbmVyKCdTdWNjZXNzZnVsbHkgb25ib2FyZGVkICRhdHNpZ24nKTsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgb25FcnJvcjogKGVycm9yKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgX2xvZ2dlci5zZXZlcmUoJ09uYm9hcmRpbmcgdGhyb3dzICRlcnJvciBlcnJvcicpOw0KICAgICAgICAgICAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICAgICAgICAgICAgICBuZXh0U2NyZWVuOiBjb25zdCBIb21lU2NyZWVuKCksDQogICAgICAgICAgICAgICAgICAgICAgICApOw0KICAgICAgICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgICAgICAgY2hpbGQ6IGNvbnN0IFRleHQoJ09uYm9hcmQgYW4gQHNpZ24nKSwNCiAgICAgICAgICAgICAgICAgICAgKSwNCiAgICAgICAgICAgICAgICAgICAgQ3VzdG9tUmVzZXRCdXR0b24oDQogICAgICAgICAgICAgICAgICAgICAgbG9hZGluZzogZmFsc2UsDQogICAgICAgICAgICAgICAgICAgICAgYnV0dG9uVGV4dDogJ1Jlc2V0JywNCiAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogOTAsDQogICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiA0MCwNCiAgICAgICAgICAgICAgICAgICAgKSwNCiAgICAgICAgICAgICAgICAgIF0sDQogICAgICAgICAgICAgICAgKSwNCiAgICAgICAgICAgICAgKSwNCiAgICAgICAgICAgICksDQogICAgICAgICAgKSwNCiAgICAgICAgKTsNCiAgICAgIH0sDQogICAgKTsNCiAgfQ0KfQ0KDQovLyogVGhlIG5leHQgc2NyZWVuIGFmdGVyIG9uYm9hcmRpbmcgKHNlY29uZCBzY3JlZW4pDQpjbGFzcyBIb21lU2NyZWVuIGV4dGVuZHMgU3RhdGVsZXNzV2lkZ2V0IHsNCiAgY29uc3QgSG9tZVNjcmVlbih7S2V5PyBrZXl9KSA6IHN1cGVyKGtleToga2V5KTsNCg0KICBAb3ZlcnJpZGUNCiAgV2lkZ2V0IGJ1aWxkKEJ1aWxkQ29udGV4dCBjb250ZXh0KSB7DQogICAgLy8vIEdldCB0aGUgQXRDbGllbnRNYW5hZ2VyIGluc3RhbmNlDQogICAgdmFyIGF0Q2xpZW50TWFuYWdlciA9IEF0Q2xpZW50TWFuYWdlci5nZXRJbnN0YW5jZSgpOw0KDQogICAgcmV0dXJuIFNjYWZmb2xkKA0KICAgICAgYXBwQmFyOiBBcHBCYXIoDQogICAgICAgIHRpdGxlOiBjb25zdCBUZXh0KCdEYXNoYm9hcmQnKSwNCiAgICAgICAgYWN0aW9uczogPFdpZGdldD5bDQogICAgICAgICAgSWNvbkJ1dHRvbigNCiAgICAgICAgICAgIGljb246IGNvbnN0IEljb24oSWNvbnMuc3dpdGNoX2FjY291bnQpLA0KICAgICAgICAgICAgdG9vbHRpcDogJ1N3aXRjaCBAc2lnbicsDQogICAgICAgICAgICBvblByZXNzZWQ6ICgpIGFzeW5jIHsNCiAgICAgICAgICAgICAgdmFyIGF0U2lnbkxpc3QgPSBhd2FpdCBLZXljaGFpblV0aWwuZ2V0QXRzaWduTGlzdCgpOw0KICAgICAgICAgICAgICBhd2FpdCBzaG93TW9kYWxCb3R0b21TaGVldCgNCiAgICAgICAgICAgICAgICBjb250ZXh0OiBjb250ZXh0LA0KICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogQ29sb3JzLnRyYW5zcGFyZW50LA0KICAgICAgICAgICAgICAgIGJ1aWxkZXI6IChjb250ZXh0KSA9PiBBdFNpZ25Cb3R0b21TaGVldChhdFNpZ25MaXN0OiBhdFNpZ25MaXN0ID8/IFtdKSwNCiAgICAgICAgICAgICAgKTsNCiAgICAgICAgICAgIH0sDQogICAgICAgICAgKSwNCiAgICAgICAgXSwNCiAgICAgICksDQogICAgICBib2R5OiBDZW50ZXIoDQogICAgICAgIGNoaWxkOiBDb2x1bW4oDQogICAgICAgICAgY2hpbGRyZW46IFsNCiAgICAgICAgICAgIGNvbnN0IFRleHQoJ1N1Y2Nlc3NmdWxseSBvbmJvYXJkZWQgYW5kIG5hdmlnYXRlZCB0byBGaXJzdEFwcFNjcmVlbicpLA0KDQogICAgICAgICAgICAvLy8gVXNlIHRoZSBBdENsaWVudE1hbmFnZXIgaW5zdGFuY2UgdG8gZ2V0IHRoZSBjdXJyZW50IGF0c2lnbg0KICAgICAgICAgICAgVGV4dCgnQ3VycmVudCBAc2lnbjogJHthdENsaWVudE1hbmFnZXIuYXRDbGllbnQuZ2V0Q3VycmVudEF0U2lnbigpfScpLA0KICAgICAgICAgIF0sDQogICAgICAgICksDQogICAgICApLA0KICAgICk7DQogIH0NCn0NCg0K","type":"text"},{"path":"lib\\switch_atsign.dart","data":"","type":"text"},{"path":"lib\\theme.dart","data":"DQppbXBvcnQgJ3BhY2thZ2U6Zmx1dHRlci9tYXRlcmlhbC5kYXJ0JzsNCg0KVGhlbWVEYXRhIGxpZ2h0VGhlbWUgPSBUaGVtZURhdGEoDQogICAgICAgICAgICBicmlnaHRuZXNzOiBCcmlnaHRuZXNzLmxpZ2h0LA0KICAgICAgICAgICAgcHJpbWFyeUNvbG9yOiBjb25zdCBDb2xvcigweEZGZjQ1MzNkKSwNCiAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogQ29sb3JzLndoaXRlLA0KICAgICAgICAgICAgc2NhZmZvbGRCYWNrZ3JvdW5kQ29sb3I6IENvbG9ycy53aGl0ZSwNCiAgICAgICAgICApOw0KDQpUaGVtZURhdGEgZGFya1RoZW1lID0gVGhlbWVEYXRhKA0KICAgICAgICAgICAgYnJpZ2h0bmVzczogQnJpZ2h0bmVzcy5kYXJrLA0KICAgICAgICAgICAgcHJpbWFyeUNvbG9yOiBDb2xvcnMuYmx1ZSwNCiAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogQ29sb3JzLmdyZXlbODUwXSwNCiAgICAgICAgICAgIHNjYWZmb2xkQmFja2dyb3VuZENvbG9yOiBDb2xvcnMuZ3JleVs4NTBdLA0KICAgICAgICAgICk7DQo=","type":"text"}],"hooks":[],"name":"at_onboarding_flutter","description":"A sample of how to use the at_onboarding_flutter package.","version":"0.1.0","vars":{}});